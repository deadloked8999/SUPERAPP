const https = require('https');
const http = require('http');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
async function testAPI(username, code) {
  return new Promise((resolve, reject) => {
    const url = `http://127.0.0.1:5000/api/verify-code?username=${encodeURIComponent(username)}&code=${encodeURIComponent(code)}`;
    
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${url}`);
    
    http.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          console.log(`üìä –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
          console.log(`üìÑ –û—Ç–≤–µ—Ç:`, result);
          resolve({ status: res.statusCode, data: result });
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', error);
          reject(error);
        }
      });
    }).on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
      reject(error);
    });
  });
}

async function main() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint /api/verify-code\n');
  
  // –¢–µ—Å—Ç 1: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è needls1
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–æ–¥–æ–º –¥–ª—è @needls1:');
  await testAPI('needls1', '1234');
  console.log('');
  
  // –¢–µ—Å—Ç 2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è needls1
  console.log('2Ô∏è‚É£ –¢–µ—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–æ–¥–æ–º –¥–ª—è @needls1:');
  await testAPI('needls1', '9999');
  console.log('');
  
  // –¢–µ—Å—Ç 3: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è Ninth_God
  console.log('3Ô∏è‚É£ –¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–æ–¥–æ–º –¥–ª—è @Ninth_God:');
  await testAPI('Ninth_God', '5678');
  console.log('');
  
  // –¢–µ—Å—Ç 4: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  console.log('4Ô∏è‚É£ –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:');
  await testAPI('nonexistent', '1234');
  console.log('');
  
  // –¢–µ—Å—Ç 5: –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  console.log('5Ô∏è‚É£ –¢–µ—Å—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:');
  await testAPI('', '');
  console.log('');
  
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

main().catch(console.error); 
import TelegramBot from "node-telegram-bot-api";
import { db, addUser, initUsersTable, getUserByChatId, getUserByUsername } from "./db.js";
import dotenv from "dotenv";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.TELEGRAM_BOT_TOKEN;

if (!token) {
  console.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
export const bot = new TelegramBot(token, { polling: true });

// Map –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (username -> { code, expires })
export const authCodes = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 4-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥–∞
const generateAuthCode = () => {
  return Math.floor(1000 + Math.random() * 9000).toString();
};

// TODO: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
const getUserFromDB = async (username) => {
  try {
    return await getUserByUsername(username);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î:", error);
    return null;
  }
};

// TODO: –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –≤ –ë–î
const saveCodeToUser = async (username, code) => {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –≤ Map (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ)
    const expires = Date.now() + (10 * 60 * 1000); // 10 –º–∏–Ω—É—Ç
    authCodes.set(username, { code, expires });
    console.log(`üíæ –ö–æ–¥ ${code} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username}`);
    return true;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –≤ –ë–î:", error);
    return false;
  }
};

// TODO: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
const generateCode = () => {
  return generateAuthCode();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–æ–¥–æ–≤
const cleanupExpiredCodes = () => {
  const now = Date.now();
  for (const [username, data] of authCodes.entries()) {
    if (data.expires < now) {
      authCodes.delete(username);
      console.log(`üßπ –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫–æ–¥ –¥–ª—è ${username}`);
    }
  }
};

// –û—á–∏—Å—Ç–∫–∞ –∫–æ–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(cleanupExpiredCodes, 5 * 60 * 1000);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
initUsersTable().then(() => {
  console.log("ü§ñ Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ");
}).catch(err => {
  console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:", err);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;
  const firstName = msg.from.first_name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

  const user = await getUserFromDB(username);

  if (user && user.role && user.id) {
    bot.sendMessage(chatId,
      `üîê –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å!\nüß≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/status ‚Äì –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å\n/auth ‚Äì –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞`
    );
  } else {
    bot.sendMessage(chatId,
      `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!\n–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.`
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status
bot.onText(/\/status/, async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;

  const user = await getUserFromDB(username);

  if (user && user.role && user.id) {
    await bot.sendMessage(chatId,
      `üë§ –í–∞—à —Å—Ç–∞—Ç—É—Å:\n–†–æ–ª—å: ${user.role}\nID: ${user.id}\n–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.`
    );
    await bot.sendMessage(chatId,
      `üîê –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å!\nüß≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/status ‚Äì –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å\n/auth ‚Äì –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞`
    );
  } else {
    bot.sendMessage(chatId, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.");
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /auth –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞
bot.onText(/\/auth/, async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;

  const user = await getUserFromDB(username);
  if (!user) return bot.sendMessage(chatId, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.");

  const code = generateCode();
  await saveCodeToUser(username, code);

  bot.sendMessage(chatId, `üîë –í–∞—à –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${code}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, async (msg) => {
  const chatId = msg.chat.id;
  
  const helpMessage = `
ü§ñ <b>SUPERAPP - –°–ø—Ä–∞–≤–∫–∞</b>

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ
/auth - –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/status - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å

üéØ <b>–†–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:</b>
‚Ä¢ admin - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
‚Ä¢ hostess - –•–æ—Å—Ç–µ—Å
‚Ä¢ dancer - –¢–∞–Ω—Ü–æ–≤—â–∏—Ü–∞
‚Ä¢ promoter - –ü—Ä–æ–º–æ—É—Ç–µ—Ä
‚Ä¢ unknown - –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å

üîê <b>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:</b>
1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /auth –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞
2. –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 10 –º–∏–Ω—É—Ç
3. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ –¥–ª—è –≤—Ö–æ–¥–∞

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.

üåê <b>–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>
http://localhost:5173
  `;

  await bot.sendMessage(chatId, helpMessage, { parse_mode: 'HTML' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.on('error', (error) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:", error);
});

bot.on('polling_error', (error) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ polling Telegram –±–æ—Ç–∞:", error);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
export const stopBot = () => {
  bot.stopPolling();
  console.log("ü§ñ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞
export const verifyAuthCode = (username, code) => {
  const authData = authCodes.get(username);
  
  if (!authData) {
    return { valid: false, message: "–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω" };
  }
  
  if (authData.expires < Date.now()) {
    authCodes.delete(username);
    return { valid: false, message: "–ö–æ–¥ –∏—Å—Ç–µ–∫" };
  }
  
  if (authData.code !== code) {
    return { valid: false, message: "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥" };
  }
  
  // –£–¥–∞–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
  authCodes.delete(username);
  
  return { valid: true, message: "–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω" };
}; 